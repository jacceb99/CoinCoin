{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport coinMarketData from \"./coinMarketData\";\nimport React, { useState, useEffect } from \"react\";\nimport storeCoinID from \"./storeCoinId\";\n\nfunction storeMarketData(props) {\n  useEffect(function () {\n    loadCoinMarketData();\n  }, []);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coinMarket = _useState2[0],\n      setCoinMarket = _useState2[1];\n\n  var delay = function delay(ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  };\n\n  var coinID = storeCoinID();\n\n  if (coinID !== null) {\n    console.log(coinID);\n  }\n\n  var loadCoinMarketData = function loadCoinMarketData() {\n    var marketResponse;\n    return _regeneratorRuntime.async(function loadCoinMarketData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(delay(1000));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(coinMarketData.getCoinMarketData(coinID[0]));\n\n          case 4:\n            marketResponse = _context.sent;\n            setCoinMarket(marketResponse.data);\n            console.log(\"CoinMarketen:\", coinMarket);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return coinMarket;\n}\n\nexport default storeMarketData;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/api/storeMarketData.js"],"names":["coinMarketData","React","useState","useEffect","storeCoinID","storeMarketData","props","loadCoinMarketData","coinMarket","setCoinMarket","delay","ms","Promise","resolve","setTimeout","coinID","console","log","getCoinMarketData","marketResponse","data"],"mappings":";;AAAA,OAAOA,cAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BH,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;;AAD8B,kBAKML,QAAQ,CAAC,EAAD,CALd;AAAA;AAAA,MAKvBM,UALuB;AAAA,MAKXC,aALW;;AAM9B,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,EAAD;AAAA,WAAQ,IAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,aAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAvB;AAAA,KAAZ,CAAR;AAAA,GAAd;;AACA,MAAMI,MAAM,GAAGX,WAAW,EAA1B;;AAEA,MAAIW,MAAM,KAAK,IAAf,EAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD;;AAID,MAAMR,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACnBG,KAAK,CAAC,IAAD,CADc;;AAAA;AAAA;AAAA,6CAEIV,cAAc,CAACkB,iBAAf,CAAiCH,MAAM,CAAC,CAAD,CAAvC,CAFJ;;AAAA;AAEnBI,YAAAA,cAFmB;AAGzBV,YAAAA,aAAa,CAACU,cAAc,CAACC,IAAhB,CAAb;AACAJ,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,UAA7B;;AAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAMA,SAAOA,UAAP;AACD;;AAED,eAAeH,eAAf","sourcesContent":["import coinMarketData from \"./coinMarketData\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport storeCoinID from \"./storeCoinId\";\r\n\r\nfunction storeMarketData(props) {\r\n  useEffect(() => {\r\n    loadCoinMarketData();\r\n  }, []);\r\n\r\n  const [coinMarket, setCoinMarket] = useState([]);\r\n  const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n  const coinID = storeCoinID(); //CoinID = arrayen med alla coins, de har tre properties id,symbol och name.\r\n\r\n  if (coinID !== null) {\r\n    console.log(coinID);\r\n  }\r\n\r\n  //Loading marketdata\r\n\r\n  const loadCoinMarketData = async () => {\r\n    await delay(1000);\r\n    const marketResponse = await coinMarketData.getCoinMarketData(coinID[0]);\r\n    setCoinMarket(marketResponse.data);\r\n    console.log(\"CoinMarketen:\", coinMarket);\r\n  };\r\n  return coinMarket;\r\n}\r\n\r\nexport default storeMarketData;\r\n"]},"metadata":{},"sourceType":"module"}