{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\components\\\\ItemList.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListItem from \"./ListItem\";\nimport ListItemDeleteAction from \"./ListItemDeleteAction\";\nimport ListItemSeperator from \"./ListItemSeperator\";\nimport coinMarketData from \"../api/coinMarketData\";\nimport coinIDData from \"../api/coinIDData\";\n\nfunction ItemList(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coinMarket = _useState2[0],\n      setCoinMarket = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coinID = _useState4[0],\n      setCoinID = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refreshing = _useState6[0],\n      setRefreshing = _useState6[1];\n\n  var userInputCoinID = \"bitcoin\";\n  var coinExists = false;\n  userInputCoinID = userInputCoinID.toLowerCase();\n  useEffect(function () {\n    setTimeout(function () {\n      loadCoinIDData();\n      loadCoinMarketData();\n    }, 2000);\n  }, []);\n\n  var loadCoinIDData = function loadCoinIDData() {\n    var response;\n    return _regeneratorRuntime.async(function loadCoinIDData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(coinIDData.getCoinIDData());\n\n          case 2:\n            response = _context.sent;\n            setCoinID(response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var coinName = \"Inte fått värde\";\n\n  for (var i = 0; i < coinID.length; i++) {\n    if (userInputCoinID === coinID[i].id || userInputCoinID === coinID[i].symbol) {\n      coinExists = true;\n      console.log(\"Name: \" + coinID[i].id + \" \" + \"Ticker: \" + coinID[i].symbol);\n      coinName = coinID[i].id;\n      break;\n    }\n  }\n\n  console.log(\"heeeee\", coinName);\n  setTimeout(function () {\n    var loadCoinMarketData = function loadCoinMarketData() {\n      var marketResponse;\n      return _regeneratorRuntime.async(function loadCoinMarketData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(coinMarketData.getCoinMarketData(coinName));\n\n            case 2:\n              marketResponse = _context2.sent;\n              setCoinMarket(marketResponse.data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }, 1000);\n\n  var handleDelete = function handleDelete(coin) {\n    setCoins(coins.filter(function (m) {\n      return m.id !== coin.id;\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.styleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      width: \"100%\"\n    },\n    data: coinMarket,\n    keyExtractor: function keyExtractor(coin) {\n      return coin.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        title: item.symbol,\n        imageUrl: item.image,\n        size: 48,\n        price: item.current_price,\n        oneHour: item.price_change_percentage_1h_in_currency,\n        twentyFourHours: item.price_change_percentage_24h_in_currency,\n        sevenDays: item.price_change_percentage_7d_in_currency,\n        thirtyDays: item.price_change_percentage_30d_in_currency,\n        onPress: function onPress() {\n          return console.log(\"Item selected\", item);\n        },\n        renderRightActions: function renderRightActions() {\n          return React.createElement(ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      });\n    },\n    ItemSeparatorComponent: ListItemSeperator,\n    refreshing: refreshing,\n    onRefresh: function onRefresh() {\n      setCoins([{\n        id: 2,\n        title: \"UNI\",\n        description: \"27.30$\",\n        image: require(\"../assets/coins/uni.png\")\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ItemList;\nvar styles = StyleSheet.create({\n  styleContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/components/ItemList.js"],"names":["React","useState","useEffect","ListItem","ListItemDeleteAction","ListItemSeperator","coinMarketData","coinIDData","ItemList","props","coinMarket","setCoinMarket","coinID","setCoinID","refreshing","setRefreshing","userInputCoinID","coinExists","toLowerCase","setTimeout","loadCoinIDData","loadCoinMarketData","getCoinIDData","response","data","coinName","i","length","id","symbol","console","log","getCoinMarketData","marketResponse","handleDelete","coin","setCoins","coins","filter","m","styles","styleContainer","width","toString","item","image","current_price","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","price_change_percentage_30d_in_currency","title","description","require","StyleSheet","create","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FlatList, StyleSheet, View } from \"react-native\";\r\n\r\nimport ListItem from \"./ListItem\";\r\nimport ListItemDeleteAction from \"./ListItemDeleteAction\";\r\nimport ListItemSeperator from \"./ListItemSeperator\";\r\nimport coinMarketData from \"../api/coinMarketData\";\r\nimport coinIDData from \"../api/coinIDData\";\r\n\r\nfunction ItemList(props) {\r\n  const [coinMarket, setCoinMarket] = useState([]);\r\n  const [coinID, setCoinID] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  let userInputCoinID = \"bitcoin\";\r\n  let coinExists = false;\r\n  userInputCoinID = userInputCoinID.toLowerCase();\r\n\r\n  //Loading coin ID data\r\n\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      loadCoinIDData();\r\n      loadCoinMarketData();\r\n    }, 2000);\r\n  }, []);\r\n\r\n  const loadCoinIDData = async () => {\r\n    const response = await coinIDData.getCoinIDData();\r\n    setCoinID(response.data);\r\n  };\r\n\r\n  var coinName = \"Inte fått värde\";\r\n\r\n  for (let i = 0; i < coinID.length; i++) {\r\n    if (\r\n      userInputCoinID === coinID[i].id ||\r\n      userInputCoinID === coinID[i].symbol\r\n    ) {\r\n      coinExists = true;\r\n      console.log(\r\n        \"Name: \" + coinID[i].id + \" \" + \"Ticker: \" + coinID[i].symbol\r\n      );\r\n      coinName = coinID[i].id;\r\n      break;\r\n    }\r\n  }\r\n\r\n  console.log(\"heeeee\", coinName);\r\n  //Loading marketdata\r\n  setTimeout(function () {\r\n    const loadCoinMarketData = async () => {\r\n      const marketResponse = await coinMarketData.getCoinMarketData(coinName);\r\n      setCoinMarket(marketResponse.data);\r\n    };\r\n  }, 1000);\r\n\r\n  //Handle to Delete a coin from the list\r\n  const handleDelete = (coin) => {\r\n    setCoins(coins.filter((m) => m.id !== coin.id));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.styleContainer}>\r\n      <FlatList\r\n        style={{ width: \"100%\" }}\r\n        data={coinMarket}\r\n        keyExtractor={(coin) => coin.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <ListItem\r\n            title={item.symbol}\r\n            imageUrl={item.image}\r\n            size={48}\r\n            price={item.current_price}\r\n            oneHour={item.price_change_percentage_1h_in_currency}\r\n            twentyFourHours={item.price_change_percentage_24h_in_currency}\r\n            sevenDays={item.price_change_percentage_7d_in_currency}\r\n            thirtyDays={item.price_change_percentage_30d_in_currency}\r\n            onPress={() => console.log(\"Item selected\", item)}\r\n            renderRightActions={() => (\r\n              <ListItemDeleteAction onPress={() => handleDelete(item)} />\r\n            )}\r\n          />\r\n        )}\r\n        ItemSeparatorComponent={ListItemSeperator}\r\n        refreshing={refreshing}\r\n        onRefresh={() => {\r\n          setCoins([\r\n            {\r\n              id: 2,\r\n              title: \"UNI\",\r\n              description: \"27.30$\",\r\n              image: require(\"../assets/coins/uni.png\"),\r\n            },\r\n          ]);\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n\r\nconst styles = StyleSheet.create({\r\n  styleContainer: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}