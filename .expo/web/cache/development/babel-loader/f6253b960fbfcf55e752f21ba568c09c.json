{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport coinIDData from \"../api/coinIDData\";\n\nfunction storeCoinID(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coinID = _useState2[0],\n      setCoinID = _useState2[1];\n\n  useEffect(function () {\n    loadCoinIDData();\n  }, []);\n\n  var loadCoinIDData = function loadCoinIDData() {\n    var response;\n    return _regeneratorRuntime.async(function loadCoinIDData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(coinIDData.getCoinIDData());\n\n          case 2:\n            response = _context.sent;\n            setCoinID(response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return coinID;\n}\n\nexport default storeCoinID;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/api/storeCoinId.js"],"names":["coinIDData","storeCoinID","props","useState","coinID","setCoinID","useEffect","loadCoinIDData","getCoinIDData","response","data"],"mappings":";;AAAA,OAAOA,UAAP;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,kBACEC,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,MACnBC,MADmB;AAAA,MACXC,SADW;;AAG1BC,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAMA,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEP,UAAU,CAACQ,aAAX,EADF;;AAAA;AACfC,YAAAA,QADe;AAErBJ,YAAAA,SAAS,CAACI,QAAQ,CAACC,IAAV,CAAT;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAKA,SAAON,MAAP;AACD;;AAED,eAAeH,WAAf","sourcesContent":["import coinIDData from \"../api/coinIDData\";\r\n\r\nfunction storeCoinID(props) {\r\n  const [coinID, setCoinID] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCoinIDData();\r\n  }, []);\r\n\r\n  //Loading coin ID data\r\n  const loadCoinIDData = async () => {\r\n    const response = await coinIDData.getCoinIDData();\r\n    setCoinID(response.data);\r\n  };\r\n\r\n  return coinID;\r\n}\r\n\r\nexport default storeCoinID;\r\n"]},"metadata":{},"sourceType":"module"}