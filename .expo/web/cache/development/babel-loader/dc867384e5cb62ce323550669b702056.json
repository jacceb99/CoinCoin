{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\components\\\\ImageInput.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport colors from \"../config/colors\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nfunction ImageInput(imageUri, onChangeImage) {\n  useEffect(function () {\n    requestPermission();\n  }, []);\n\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n            if (!granted) alert(\"You need to able permission to access gallery\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handlePress = function handlePress() {\n    if (!imageUri) selectImage();else Alert.alert(\"delete\", \"Are you sure you want to delete this image?\", [{\n      text: \"Yes\",\n      onPress: function onPress() {\n        return onChangeImage(null);\n      }\n    }, {\n      text: \"No\"\n    }]);\n  };\n\n  var selectImage = function selectImage() {\n    var result;\n    return _regeneratorRuntime.async(function selectImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 0.5\n            }));\n\n          case 3:\n            result = _context2.sent;\n            if (!result.cancelled) onChangeImage(result.uri);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Error reading an image\");\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(AntDesign, {\n    name: \"camera\",\n    size: 64,\n    color: colors.dark,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), imageUri && React.createElement(Image, {\n    source: {\n      uri: imageUri\n    },\n    style: styles.imageStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    borderRadius: 20,\n    backgroundColor: colors.light,\n    width: 200,\n    height: 200,\n    justifyContent: \"center\"\n  },\n  imageStyle: {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\"\n  }\n});\nexport default ImageInput;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/components/ImageInput.js"],"names":["React","useEffect","useState","ImagePicker","colors","AntDesign","ImageInput","imageUri","onChangeImage","requestPermission","requestMediaLibraryPermissionsAsync","granted","alert","handlePress","selectImage","Alert","text","onPress","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","quality","result","cancelled","uri","console","log","styles","container","dark","flex","imageStyle","StyleSheet","create","alignItems","borderRadius","backgroundColor","light","width","height","justifyContent","overflow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  Alert,\r\n} from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport colors from \"../config/colors\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nfunction ImageInput(imageUri, onChangeImage) {\r\n  useEffect(() => {\r\n    requestPermission();\r\n  }, []);\r\n\r\n  //Requesting permission to use media library\r\n  const requestPermission = async () => {\r\n    const { granted } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (!granted) alert(\"You need to able permission to access gallery\");\r\n  };\r\n\r\n  const handlePress = () => {\r\n    if (!imageUri) selectImage();\r\n    else\r\n      Alert.alert(\"delete\", \"Are you sure you want to delete this image?\", [\r\n        { text: \"Yes\", onPress: () => onChangeImage(null) },\r\n        { text: \"No\" },\r\n      ]);\r\n  };\r\n\r\n  const selectImage = async () => {\r\n    try {\r\n      const result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        quality: 0.5,\r\n      });\r\n      //If the user doesent cancell\r\n      if (!result.cancelled) onChangeImage(result.uri);\r\n    } catch (error) {\r\n      console.log(\"Error reading an image\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={handlePress}>\r\n      <View style={styles.container}>\r\n        {\r\n          <AntDesign\r\n            name={\"camera\"}\r\n            size={64}\r\n            color={colors.dark}\r\n            style={{ flex: 1 }}\r\n          />\r\n        }\r\n        {imageUri && (\r\n          <Image source={{ uri: imageUri }} style={styles.imageStyle} />\r\n        )}\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    borderRadius: 20,\r\n    backgroundColor: colors.light,\r\n    width: 200,\r\n    height: 200,\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  imageStyle: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n\r\nexport default ImageInput;\r\n"]},"metadata":{},"sourceType":"module"}