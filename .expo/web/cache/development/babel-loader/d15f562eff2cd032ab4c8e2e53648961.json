{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\screens\\\\WatchlistScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport colors from \"../config/colors\";\nimport ItemList from \"../components/ItemList\";\nimport IconButton from \"../components/IconButton\";\nimport AppPicker from \"../components/AppPicker\";\n\nfunction WatchlistScreen(props) {\n  var categories = [{\n    label: \"Sort by price (Rising)\",\n    value: 1\n  }, {\n    label: \"Sort by price (Descending)\",\n    value: 2\n  }, {\n    label: \"Sort by market cap (Rising)\",\n    value: 3\n  }, {\n    label: \"Sort by market cap (Descending)\",\n    value: 4\n  }];\n\n  var _useState = useState(categories[0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  console.log(\"App executed\");\n\n  var handlePress = function handlePress() {\n    return console.log(\"Text pressed\");\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: colors.background,\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"blue\",\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 3,\n      width: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../assets/images/coincoinlogo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: {\n      backgroundColor: colors.background,\n      flex: 7,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(AppPicker, {\n    items: categories,\n    placeholder: \"category\",\n    iconName: \"barschart\",\n    selectedItem: selected,\n    onSelectItem: function onSelectItem(item) {\n      return setSelected(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), React.createElement(ItemList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), React.createElement(IconButton, {\n    iconName: \"pluscircle\",\n    iconColor: colors.white,\n    onPress: function onPress() {\n      return console.log(\"Tapped\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  image: {\n    height: 40,\n    width: 36\n  }\n});\nexport default WatchlistScreen;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/screens/WatchlistScreen.js"],"names":["React","useState","colors","ItemList","IconButton","AppPicker","WatchlistScreen","props","categories","label","value","selected","setSelected","console","log","handlePress","styles","container","backgroundColor","background","flex","width","justifyContent","alignItems","image","require","item","white","StyleSheet","create","paddingTop","Platform","OS","StatusBar","currentHeight","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Image, Platform, StatusBar } from \"react-native\";\r\n\r\nimport colors from \"../config/colors\";\r\nimport ItemList from \"../components/ItemList\";\r\nimport IconButton from \"../components/IconButton\";\r\nimport AppPicker from \"../components/AppPicker\";\r\n\r\nfunction WatchlistScreen(props) {\r\n  /* Creating categories for picker */\r\n  const categories = [\r\n    { label: \"Sort by price (Rising)\", value: 1 },\r\n    { label: \"Sort by price (Descending)\", value: 2 },\r\n    { label: \"Sort by market cap (Rising)\", value: 3 },\r\n    { label: \"Sort by market cap (Descending)\", value: 4 },\r\n  ];\r\n\r\n  const [selected, setSelected] = useState(categories[0]);\r\n\r\n  console.log(\"App executed\");\r\n  const handlePress = () => console.log(\"Text pressed\");\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View\r\n        style={{\r\n          backgroundColor: colors.background,\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <View style={{ backgroundColor: \"blue\", flex: 1 }}>\r\n          <View\r\n            style={{\r\n              flex: 3,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              style={styles.image}\r\n              source={require(\"../assets/images/coincoinlogo.png\")}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            backgroundColor: colors.background,\r\n            flex: 7,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <AppPicker\r\n            items={categories}\r\n            placeholder=\"category\"\r\n            iconName={\"barschart\"}\r\n            selectedItem={selected}\r\n            onSelectItem={(item) => setSelected(item)}\r\n          />\r\n\r\n          <ItemList />\r\n\r\n          <IconButton\r\n            iconName={\"pluscircle\"}\r\n            iconColor={colors.white}\r\n            onPress={() => console.log(\"Tapped\")}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n  },\r\n\r\n  image: {\r\n    height: 40,\r\n    width: 36,\r\n  },\r\n});\r\n\r\nexport default WatchlistScreen;\r\n"]},"metadata":{},"sourceType":"module"}