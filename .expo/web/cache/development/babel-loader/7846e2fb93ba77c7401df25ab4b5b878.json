{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport WatchlistScreen from \"./app/screens/WatchlistScreen\";\nimport LoginScreen from \"./app/screens/LoginScreen\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScreenArea from \"./app/components/ScreenArea\";\nimport ImageInput from \"./app/components/ImageInput\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageUri = _useState2[0],\n      setImageUri = _useState2[1];\n\n  console.log(\"iu!\", imageUri);\n\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n            if (!granted) alert(\"You need to able permission to access gallery\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    requestPermission();\n  }, []);\n  return React.createElement(ScreenArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageInput, {\n    imageUri: imageUri,\n    onChangeImage: function onChangeImage(uri) {\n      return setImageUri(uri);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/App.js"],"names":["React","useEffect","useState","WatchlistScreen","LoginScreen","ImagePicker","ScreenArea","ImageInput","App","imageUri","setImageUri","console","log","requestPermission","requestMediaLibraryPermissionsAsync","granted","alert","uri"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,eAAP;AACA,OAAOC,WAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;;AAEA,OAAOC,UAAP;AACA,OAAOC,UAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACIN,QAAQ,EADZ;AAAA;AAAA,MACrBO,QADqB;AAAA,MACXC,WADW;;AAG5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,QAAnB;;AAGA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACER,WAAW,CAACS,mCAAZ,EADF;;AAAA;AAAA;AAChBC,YAAAA,OADgB,yBAChBA,OADgB;AAExB,gBAAI,CAACA,OAAL,EAAcC,KAAK,CAAC,+CAAD,CAAL;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,aAAa,EAAE,uBAACQ,GAAD;AAAA,aAASP,WAAW,CAACO,GAAD,CAApB;AAAA,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAQD","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport WatchlistScreen from \"./app/screens/WatchlistScreen\";\nimport LoginScreen from \"./app/screens/LoginScreen\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Button, Image, View } from \"react-native\";\nimport ScreenArea from \"./app/components/ScreenArea\";\nimport ImageInput from \"./app/components/ImageInput\";\n\nexport default function App() {\n  const [imageUri, setImageUri] = useState();\n\n  console.log(\"iu!\", imageUri);\n\n  //Requesting permission to use media library\n  const requestPermission = async () => {\n    const { granted } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (!granted) alert(\"You need to able permission to access gallery\");\n  };\n  useEffect(() => {\n    requestPermission();\n  }, []);\n\n  return (\n    <ScreenArea>\n      <ImageInput\n        imageUri={imageUri}\n        onChangeImage={(uri) => setImageUri(uri)}\n      />\n    </ScreenArea>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}