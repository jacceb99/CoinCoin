{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nexport default useApi = function useApi(apiFunc) {\n  var addToArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var request = function request(_ref) {\n    var args, response, newArray;\n    return _regeneratorRuntime.async(function request$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            args = _extends({}, _ref);\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(apiFunc(_objectSpread({}, args)));\n\n          case 4:\n            response = _context.sent;\n            setLoading(false);\n\n            if (response.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setError(true));\n\n          case 8:\n            setError(false);\n            console.log(\"UseApi data: \", response.data);\n\n            if (addToArray) {\n              newArray = [].concat(_toConsumableArray(data), [response.data[0]]);\n              setData(newArray);\n            } else {\n              setData(response.data);\n            }\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    data: data,\n    error: error,\n    loading: loading,\n    request: request\n  };\n};","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/Hooks/useApi.js"],"names":["useState","useApi","apiFunc","addToArray","data","setData","error","setError","loading","setLoading","request","args","response","ok","console","log","newArray"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAeC,MAAM,GAAG,gBAACC,OAAD,EAAiC;AAAA,MAAvBC,UAAuB,uEAAV,KAAU;;AAAA,kBAC/BH,QAAQ,CAAC,EAAD,CADuB;AAAA;AAAA,MAChDI,IADgD;AAAA,MAC1CC,OAD0C;;AAAA,mBAE7BL,QAAQ,CAAC,KAAD,CAFqB;AAAA;AAAA,MAEhDM,KAFgD;AAAA,MAEzCC,QAFyC;;AAAA,mBAGzBP,QAAQ,CAAC,KAAD,CAHiB;AAAA;AAAA,MAGhDQ,OAHgD;AAAA,MAGvCC,UAHuC;;AAMvD,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYC,YAAAA,IAAZ;AACdF,YAAAA,UAAU,CAAC,IAAD,CAAV;AADc;AAAA,6CAESP,OAAO,mBAAMS,IAAN,EAFhB;;AAAA;AAERC,YAAAA,QAFQ;AAGdH,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAHc,gBAITG,QAAQ,CAACC,EAJA;AAAA;AAAA;AAAA;;AAAA,6CAIWN,QAAQ,CAAC,IAAD,CAJnB;;AAAA;AAMdA,YAAAA,QAAQ,CAAC,KAAD,CAAR;AACAO,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,QAAQ,CAACR,IAAtC;;AACA,gBAAID,UAAJ,EAAgB;AACVa,cAAAA,QADU,gCACKZ,IADL,IACWQ,QAAQ,CAACR,IAAT,CAAc,CAAd,CADX;AAEdC,cAAAA,OAAO,CAACW,QAAD,CAAP;AACD,aAHD,MAGO;AACLX,cAAAA,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;AACD;;AAba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAeA,SAAO;AAAEA,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,KAAK,EAALA,KAAR;AAAeE,IAAAA,OAAO,EAAPA,OAAf;AAAwBE,IAAAA,OAAO,EAAPA;AAAxB,GAAP;AACD,CAtBD","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default useApi = (apiFunc, addToArray = false) => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //Loading marketdata\r\n  const request = async ({ ...args }) => {\r\n    setLoading(true);\r\n    const response = await apiFunc({ ...args });\r\n    setLoading(false);\r\n    if (!response.ok) return setError(true);\r\n\r\n    setError(false);\r\n    console.log(\"UseApi data: \", response.data);\r\n    if (addToArray) {\r\n      var newArray = [...data, response.data[0]];\r\n      setData(newArray);\r\n    } else {\r\n      setData(response.data);\r\n    }\r\n  };\r\n  return { data, error, loading, request };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}