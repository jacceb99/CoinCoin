{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport coinMarketData from \"./coinMarketData\";\nimport React, { useState, useEffect } from \"react\";\nimport storeCoinID from \"./storeCoinId\";\n\nfunction storeMarketData(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coinMarket = _useState2[0],\n      setCoinMarket = _useState2[1];\n\n  useEffect(function () {\n    loadCoinMarketData();\n  }, []);\n  var coinID = storeCoinID();\n\n  var loadCoinMarketData = function loadCoinMarketData() {\n    var i, marketResponse;\n    return _regeneratorRuntime.async(function loadCoinMarketData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            i = 0;\n\n          case 1:\n            if (!(i < coinID.length)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(coinMarketData.getCoinMarketData(coinID[i]));\n\n          case 4:\n            marketResponse = _context.sent;\n            setCoinMarket(marketResponse.data);\n            console.log(\"CoinMarketen:\", coinMarket);\n\n          case 7:\n            i++;\n            _context.next = 1;\n            break;\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return coinMarket;\n}\n\nexport default storeMarketData;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/api/storeMarketData.js"],"names":["coinMarketData","React","useState","useEffect","storeCoinID","storeMarketData","props","coinMarket","setCoinMarket","loadCoinMarketData","coinID","i","length","getCoinMarketData","marketResponse","data","console","log"],"mappings":";;AAAA,OAAOA,cAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,kBACMJ,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACvBK,UADuB;AAAA,MACXC,aADW;;AAG9BL,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAMC,MAAM,GAAGN,WAAW,EAA1B;;AAGA,MAAMK,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBE,YAAAA,CADgB,GACZ,CADY;;AAAA;AAAA,kBACTA,CAAC,GAAGD,MAAM,CAACE,MADF;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGQZ,cAAc,CAACa,iBAAf,CAC3BH,MAAM,CAACC,CAAD,CADqB,CAHR;;AAAA;AAGfG,YAAAA,cAHe;AAMrBN,YAAAA,aAAa,CAACM,cAAc,CAACC,IAAhB,CAAb;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BV,UAA7B;;AAPqB;AACUI,YAAAA,CAAC,EADX;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAYA,SAAOJ,UAAP;AACD;;AAED,eAAeF,eAAf","sourcesContent":["import coinMarketData from \"./coinMarketData\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport storeCoinID from \"./storeCoinId\";\r\n\r\nfunction storeMarketData(props) {\r\n  const [coinMarket, setCoinMarket] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCoinMarketData();\r\n  }, []);\r\n\r\n  const coinID = storeCoinID(); //CoinID = arrayen med alla coins, de har tre properties id,symbol och name.\r\n\r\n  //Loading marketdata\r\n  const loadCoinMarketData = async () => {\r\n    for (let i = 0; i < coinID.length; i++) {\r\n      {\r\n        const marketResponse = await coinMarketData.getCoinMarketData(\r\n          coinID[i]\r\n        );\r\n        setCoinMarket(marketResponse.data);\r\n        console.log(\"CoinMarketen:\", coinMarket);\r\n      }\r\n    }\r\n  };\r\n\r\n  return coinMarket;\r\n}\r\n\r\nexport default storeMarketData;\r\n"]},"metadata":{},"sourceType":"module"}