{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\components\\\\AppPicker.js\";\nimport React, { useState } from \"react\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../config/colors\";\nimport PickerItem from \"./PickerItem\";\nimport { PickerText } from \"./AppText\";\nimport AppButton from \"./AppButton\";\nimport { color } from \"react-native-reanimated\";\nimport IconButton from \"./IconButton\";\n\nfunction AppPicker(_ref) {\n  var _this = this;\n\n  var iconName = _ref.iconName,\n      items = _ref.items,\n      placeholder = _ref.placeholder,\n      selectedItem = _ref.selectedItem,\n      onSelectItem = _ref.onSelectItem;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.styleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, iconName && React.createElement(AntDesign, {\n    name: iconName,\n    size: 20,\n    style: {\n      color: colors.textcolor,\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(PickerText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \" \", selectedItem ? selectedItem.label : placeholder, \" \"), React.createElement(AntDesign, {\n    name: \"down\",\n    size: 20,\n    style: {\n      color: colors.textcolor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))), React.createElement(Modal, {\n    visible: modalVisible,\n    animationType: \"slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: colors.primary,\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(AppButton, {\n    iconColor: colors.light,\n    title: \"close\",\n    onPress: function onPress() {\n      return setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), React.createElement(FlatList, {\n    data: items,\n    keyExtractor: function keyExtractor(item) {\n      return item.value.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(PickerItem, {\n        label: item.label,\n        onPress: function onPress() {\n          setModalVisible(false);\n          onSelectItem(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default AppPicker;\nvar styles = StyleSheet.create({\n  styleContainer: {\n    backgroundColor: colors.light,\n    flexDirection: \"row\",\n    width: \"100%\",\n    padding: 9,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/components/AppPicker.js"],"names":["React","useState","AntDesign","colors","PickerItem","PickerText","AppButton","color","IconButton","AppPicker","iconName","items","placeholder","selectedItem","onSelectItem","modalVisible","setModalVisible","styles","styleContainer","textcolor","marginRight","label","backgroundColor","primary","flex","alignItems","light","item","value","toString","StyleSheet","create","flexDirection","width","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport {\r\n  Button,\r\n  FlatList,\r\n  Modal,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport PickerItem from \"./PickerItem\";\r\nimport { PickerText } from \"./AppText\";\r\nimport AppButton from \"./AppButton\";\r\nimport { color } from \"react-native-reanimated\";\r\nimport IconButton from \"./IconButton\";\r\n\r\nfunction AppPicker({\r\n  iconName,\r\n  items,\r\n  placeholder,\r\n  selectedItem,\r\n  onSelectItem,\r\n}) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <TouchableWithoutFeedback onPress={() => setModalVisible(true)}>\r\n        <View style={styles.styleContainer}>\r\n          {iconName && (\r\n            <AntDesign\r\n              name={iconName}\r\n              size={20}\r\n              style={{ color: colors.textcolor, marginRight: 10 }}\r\n            />\r\n          )}\r\n          {/*if the selectedItem is defined, render the selectedItem.label otherwise render the placeholder */}\r\n          <PickerText>\r\n            {\" \"}\r\n            {selectedItem ? selectedItem.label : placeholder}{\" \"}\r\n          </PickerText>\r\n          <AntDesign\r\n            name={\"down\"}\r\n            size={20}\r\n            style={{ color: colors.textcolor }}\r\n          />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n      {/* Modal visible uses bolean, true = visible, false = invisible */}\r\n      <Modal visible={modalVisible} animationType=\"slide\">\r\n        <View style={{ backgroundColor: colors.primary, flex: 1 }}>\r\n          <View style={{ alignItems: \"center\" }}>\r\n            <AppButton\r\n              iconColor={colors.light}\r\n              title={\"close\"}\r\n              onPress={() => setModalVisible(false)}\r\n            />\r\n          </View>\r\n          <FlatList\r\n            data={items}\r\n            keyExtractor={(item) => item.value.toString()}\r\n            renderItem={({ item }) => (\r\n              <PickerItem\r\n                label={item.label}\r\n                onPress={() => {\r\n                  setModalVisible(false);\r\n                  onSelectItem(item);\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </View>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppPicker;\r\n\r\nconst styles = StyleSheet.create({\r\n  styleContainer: {\r\n    backgroundColor: colors.light,\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    padding: 9,\r\n\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}