{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\screens\\\\TopListScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport colors from \"../config/colors\";\nimport AppPicker from \"../components/AppPicker\";\nimport ListItem from \"../components/ListItem\";\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\nimport ListItemSeperator from \"../components/ListItemSeperator\";\nimport Error from \"../components/AppText\";\nimport AppButton from \"../components/AppButton\";\nimport IconButton from \"../components/IconButton\";\nimport coinMarketDataApi from \"../api/coinMarketDataApi\";\nimport useApi from \"../Hooks/useApi\";\n\nfunction TopListScreen(_ref) {\n  var _route$params2,\n      _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var getCoinMarketDataApi = useApi(coinMarketDataApi.getCoinMarketData, true);\n  var coinData = getCoinMarketDataApi.data;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var _useState3 = useState(getCoinMarketDataApi.data),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coins = _useState4[0],\n      setCoins = _useState4[1];\n\n  useEffect(function () {\n    var _route$params;\n\n    if ((_route$params = route.params) != null && _route$params.userInput) {\n      getCoinMarketDataApi.request(route.params.userInput);\n    }\n  }, [(_route$params2 = route.params) == null ? void 0 : _route$params2.userInput]);\n\n  var handleAdd = function handleAdd() {\n    navigation.navigate(\"CoinInputScreen\", navigation);\n    console.log(route.params);\n  };\n\n  var handleDelete = function handleDelete(coin) {\n    setCoins(coins.filter(function (m) {\n      return m.symbol !== item.symbol;\n    }));\n  };\n\n  var categories = [{\n    label: \"Sort by price (Rising)\",\n    value: 1\n  }, {\n    label: \"Sort by price (Descending)\",\n    value: 2\n  }, {\n    label: \"Sort by 1h price difference (Rising)\",\n    value: 3\n  }, {\n    label: \"Sort by 1h price difference (Descending)\",\n    value: 4\n  }, {\n    label: \"Sort by 24h price difference (Rising)\",\n    value: 5\n  }, {\n    label: \"Sort by 24h price difference (Descending)\",\n    value: 6\n  }, {\n    label: \"Sort by 7d price difference (Rising)\",\n    value: 7\n  }, {\n    label: \"Sort by 7d price difference (Descending)\",\n    value: 8\n  }, {\n    label: \"Sort by 30d price difference (Rising)\",\n    value: 9\n  }, {\n    label: \"Sort by 30d price difference (Descending)\",\n    value: 10\n  }];\n\n  var _useState5 = useState(categories[0]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  console.log(\"App executed\");\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: colors.background,\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: colors.background,\n      flex: 7,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.listContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, getCoinMarketDataApi.error && React.createElement(React.Fragment, null, React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Couldn't Retrieve Data\"), React.createElement(AppButton, {\n    title: \"Retry\",\n    onPress: loadCoinMarketData.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), React.createElement(FlatList, {\n    style: {\n      width: \"100%\"\n    },\n    data: coinData,\n    keyExtractor: function keyExtractor(coin) {\n      return coin.symbol;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        title: item.symbol,\n        imageUrl: item.image,\n        size: 48,\n        price: item.current_price,\n        oneHour: item.price_change_percentage_1h_in_currency,\n        twentyFourHours: item.price_change_percentage_24h_in_currency,\n        sevenDays: item.price_change_percentage_7d_in_currency,\n        thirtyDays: item.price_change_percentage_30d_in_currency,\n        onPress: function onPress() {\n          return console.log(\"Item selected\", item);\n        },\n        renderRightActions: function renderRightActions() {\n          return React.createElement(ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      });\n    },\n    ItemSeparatorComponent: ListItemSeperator,\n    refreshing: refreshing,\n    onRefresh: function onRefresh() {\n      setCoins([{\n        id: 2,\n        title: \"UNI\",\n        description: \"27.30$\",\n        image: require(\"../assets/coins/uni.png\")\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), React.createElement(IconButton, {\n    iconName: \"pluscircle\",\n    iconColor: colors.white,\n    onPress: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), React.createElement(ActivityIndicator, {\n    animating: getCoinMarketDataApi.loading,\n    size: \"large\",\n    color: colors.light,\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  listContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  image: {\n    height: 40,\n    width: 36\n  }\n});\nexport default TopListScreen;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/screens/TopListScreen.js"],"names":["React","useState","useEffect","colors","AppPicker","ListItem","ListItemDeleteAction","ListItemSeperator","Error","AppButton","IconButton","coinMarketDataApi","useApi","TopListScreen","navigation","route","getCoinMarketDataApi","getCoinMarketData","coinData","data","refreshing","setRefreshing","coins","setCoins","params","userInput","request","handleAdd","navigate","console","log","handleDelete","coin","filter","m","symbol","item","categories","label","value","selected","setSelected","styles","container","backgroundColor","background","flex","alignItems","listContainer","error","loadCoinMarketData","width","image","current_price","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","price_change_percentage_30d_in_currency","id","title","description","require","white","loading","light","marginTop","StyleSheet","create","justifyContent","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  ActivityIndicator,\r\n  FlatList,\r\n} from \"react-native\";\r\n\r\nimport colors from \"../config/colors\";\r\nimport AppPicker from \"../components/AppPicker\";\r\nimport ListItem from \"../components/ListItem\";\r\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\r\nimport ListItemSeperator from \"../components/ListItemSeperator\";\r\nimport Error from \"../components/AppText\";\r\nimport AppButton from \"../components/AppButton\";\r\nimport IconButton from \"../components/IconButton\";\r\n\r\nimport coinMarketDataApi from \"../api/coinMarketDataApi\";\r\n\r\nimport useApi from \"../Hooks/useApi\";\r\n\r\nfunction TopListScreen({ navigation, route }) {\r\n  const getCoinMarketDataApi = useApi(\r\n    coinMarketDataApi.getCoinMarketData,\r\n    true\r\n  );\r\n\r\n  let coinData = getCoinMarketDataApi.data;\r\n\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [coins, setCoins] = useState(getCoinMarketDataApi.data);\r\n\r\n  useEffect(() => {\r\n    if (route.params?.userInput) {\r\n      getCoinMarketDataApi.request(route.params.userInput);\r\n    }\r\n  }, [route.params?.userInput]);\r\n\r\n  const handleAdd = () => {\r\n    navigation.navigate(\"CoinInputScreen\", navigation);\r\n    console.log(route.params);\r\n  };\r\n\r\n  //Handle to Delete a coin from the list\r\n  const handleDelete = (coin) => {\r\n    setCoins(coins.filter((m) => m.symbol !== item.symbol));\r\n  };\r\n\r\n  /* Creating categories for picker */\r\n  const categories = [\r\n    { label: \"Sort by price (Rising)\", value: 1 },\r\n    { label: \"Sort by price (Descending)\", value: 2 },\r\n    { label: \"Sort by 1h price difference (Rising)\", value: 3 },\r\n    { label: \"Sort by 1h price difference (Descending)\", value: 4 },\r\n    { label: \"Sort by 24h price difference (Rising)\", value: 5 },\r\n    { label: \"Sort by 24h price difference (Descending)\", value: 6 },\r\n    { label: \"Sort by 7d price difference (Rising)\", value: 7 },\r\n    { label: \"Sort by 7d price difference (Descending)\", value: 8 },\r\n    { label: \"Sort by 30d price difference (Rising)\", value: 9 },\r\n    { label: \"Sort by 30d price difference (Descending)\", value: 10 },\r\n  ];\r\n\r\n  const [selected, setSelected] = useState(categories[0]);\r\n\r\n  console.log(\"App executed\");\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View\r\n        style={{\r\n          backgroundColor: colors.background,\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            backgroundColor: colors.background,\r\n            flex: 7,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <View style={styles.listContainer}>\r\n            {getCoinMarketDataApi.error && (\r\n              <>\r\n                <Error>Couldn't Retrieve Data</Error>\r\n                <AppButton title=\"Retry\" onPress={loadCoinMarketData.data} />\r\n                {/*Kan va fel som händer onPress atm */}\r\n              </>\r\n            )}\r\n\r\n            <FlatList\r\n              style={{ width: \"100%\" }}\r\n              data={coinData}\r\n              keyExtractor={(coin) => coin.symbol}\r\n              renderItem={({ item }) => (\r\n                <ListItem\r\n                  title={item.symbol}\r\n                  imageUrl={item.image}\r\n                  size={48}\r\n                  price={item.current_price}\r\n                  oneHour={item.price_change_percentage_1h_in_currency}\r\n                  twentyFourHours={item.price_change_percentage_24h_in_currency}\r\n                  sevenDays={item.price_change_percentage_7d_in_currency}\r\n                  thirtyDays={item.price_change_percentage_30d_in_currency}\r\n                  onPress={() => console.log(\"Item selected\", item)}\r\n                  renderRightActions={() => (\r\n                    <ListItemDeleteAction onPress={() => handleDelete(item)} />\r\n                  )}\r\n                />\r\n              )}\r\n              ItemSeparatorComponent={ListItemSeperator}\r\n              refreshing={refreshing}\r\n              onRefresh={() => {\r\n                setCoins([\r\n                  {\r\n                    id: 2,\r\n                    title: \"UNI\",\r\n                    description: \"27.30$\",\r\n                    image: require(\"../assets/coins/uni.png\"),\r\n                  },\r\n                ]);\r\n              }}\r\n            />\r\n            <IconButton\r\n              iconName={\"pluscircle\"}\r\n              iconColor={colors.white}\r\n              onPress={handleAdd}\r\n            />\r\n            <ActivityIndicator\r\n              animating={getCoinMarketDataApi.loading}\r\n              size=\"large\"\r\n              color={colors.light}\r\n              style={{ marginTop: 20 }}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n\r\n  listContainer: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  image: {\r\n    height: 40,\r\n    width: 36,\r\n  },\r\n});\r\n\r\nexport default TopListScreen;\r\n"]},"metadata":{},"sourceType":"module"}