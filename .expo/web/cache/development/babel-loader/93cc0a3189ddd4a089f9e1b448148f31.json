{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\screens\\\\CoinInputScreen.js\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Yup from \"yup\";\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\nimport colors from \"../config/colors\";\nimport IconButton from \"../components/IconButton\";\nimport coinIDDataApi from \"../api/coinIDDataApi\";\nimport useApi from \"../Hooks/useApi\";\nvar validationSchema = Yup.object().shape({\n  ticker: Yup.string().required().label(\"Ticker\")\n});\n\nfunction CoinInputScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var getCoinIDDataApi = useApi(coinIDDataApi.getCoinIDData, false);\n  useEffect(function () {\n    getCoinIDDataApi.request();\n  }, []);\n  var coinIDData = getCoinIDDataApi.data;\n\n  var handleBack = function handleBack() {\n    navigation.navigate(\"WatchlistScreen\");\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    var userInputCoinID = values.ticker.toLowerCase();\n    console.log(\"User enters: \", userInputCoinID);\n\n    for (var i = 0; i < coinIDData.length; i++) {\n      if (userInputCoinID === coinIDData[i].id || userInputCoinID === coinIDData[i].symbol) {\n        console.log(\"Name: \" + coinIDData[i].id + \" \" + \"Ticker: \" + coinIDData[i].symbol);\n        navigation.navigate(\"WatchlistScreen\", {\n          userInput: coinIDData[i].id\n        });\n        break;\n      } else if (i === coinIDData.length - 1) {\n        console.log(\"That coin does not exist\");\n        break;\n      }\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(IconButton, {\n    iconName: \"closecircle\",\n    iconColor: colors.white,\n    onPress: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(AppForm, {\n    initialValues: {\n      ticker: \"\"\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(AppFormField, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    name: \"ticker\",\n    iconName: \"linechart\",\n    placeholder: \"Write coin ticker or name, eg. BTC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.background,\n    paddingTop: 10,\n    flex: 1\n  },\n  button: {\n    width: \"100%\"\n  }\n});\nexport default CoinInputScreen;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/screens/CoinInputScreen.js"],"names":["React","useEffect","Yup","AppForm","AppFormField","SubmitButton","colors","IconButton","coinIDDataApi","useApi","validationSchema","object","shape","ticker","string","required","label","CoinInputScreen","navigation","route","getCoinIDDataApi","getCoinIDData","request","coinIDData","data","handleBack","navigate","handleSubmit","values","userInputCoinID","toLowerCase","console","log","i","length","id","symbol","userInput","styles","container","marginLeft","white","alignItems","margin","StyleSheet","create","backgroundColor","background","paddingTop","flex","button","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\r\nimport colors from \"../config/colors\";\r\nimport IconButton from \"../components/IconButton\";\r\nimport coinIDDataApi from \"../api/coinIDDataApi\";\r\nimport useApi from \"../Hooks/useApi\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  ticker: Yup.string().required().label(\"Ticker\"),\r\n});\r\n\r\nfunction CoinInputScreen({ navigation, route }) {\r\n  const getCoinIDDataApi = useApi(coinIDDataApi.getCoinIDData, false);\r\n\r\n  useEffect(() => {\r\n    getCoinIDDataApi.request();\r\n  }, []);\r\n\r\n  const coinIDData = getCoinIDDataApi.data;\r\n\r\n  const handleBack = () => {\r\n    //console.log(\"WatchlistData\", coinIDData);\r\n    navigation.navigate(\"WatchlistScreen\");\r\n  };\r\n  const handleSubmit = (values) => {\r\n    const userInputCoinID = values.ticker.toLowerCase();\r\n    console.log(\"User enters: \", userInputCoinID);\r\n\r\n    for (let i = 0; i < coinIDData.length; i++) {\r\n      if (\r\n        userInputCoinID === coinIDData[i].id ||\r\n        userInputCoinID === coinIDData[i].symbol\r\n      ) {\r\n        console.log(\r\n          \"Name: \" + coinIDData[i].id + \" \" + \"Ticker: \" + coinIDData[i].symbol\r\n        );\r\n\r\n        navigation.navigate(\"WatchlistScreen\", {\r\n          userInput: coinIDData[i].id,\r\n        });\r\n        break;\r\n      } else if (i === coinIDData.length - 1) {\r\n        console.log(\"That coin does not exist\");\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ marginLeft: 20 }}>\r\n        <IconButton\r\n          iconName={\"closecircle\"}\r\n          iconColor={colors.white}\r\n          onPress={handleBack}\r\n        />\r\n      </View>\r\n      <View style={{ alignItems: \"center\", margin: 20 }}>\r\n        <AppForm\r\n          initialValues={{ ticker: \"\" }}\r\n          onSubmit={handleSubmit}\r\n          validationSchema={validationSchema}\r\n        >\r\n          <AppFormField\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            name=\"ticker\"\r\n            iconName=\"linechart\"\r\n            placeholder=\"Write coin ticker or name, eg. BTC\"\r\n          />\r\n\r\n          <SubmitButton title={\"Add\"} />\r\n        </AppForm>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.background,\r\n\r\n    paddingTop: 10,\r\n    flex: 1,\r\n  },\r\n\r\n  button: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default CoinInputScreen;\r\n"]},"metadata":{},"sourceType":"module"}