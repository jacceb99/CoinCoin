{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\screens\\\\LoginScreen.js\";\nimport React, { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Yup from \"yup\";\nimport coinIDDataApi from \"../api/coinIDDataApi\";\nimport useApi from \"../Hooks/useApi\";\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\nvar coinIDData = [];\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).label(\"Password\")\n});\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var getCoinIDDataApi = useApi(coinIDDataApi.getCoinIDData, true);\n  useEffect(function () {\n    coinIDData = (_readOnlyError(\"coinIDData\"), getCoinIDDataApi.request());\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.backgroundImage,\n    source: require(\"../assets/images/stocksbackground.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/images/coincoinlogo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), React.createElement(AppForm, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n      console.log(coinIDData);\n      navigation.navigate(\"TabNavigator\", {\n        coinIDData: coinIDData\n      });\n    },\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(AppFormField, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    name: \"email\",\n    iconName: \"mail\",\n    placeholder: \"Email\",\n    textContentType: \"emailAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), React.createElement(AppFormField, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    name: \"password\",\n    iconName: \"lock\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  backgroundImage: {\n    position: \"absolute\",\n    flex: 1,\n    width: 1380,\n    height: 1035,\n    resizeMode: \"contain\"\n  },\n  logo: {\n    width: 180,\n    height: 200,\n    alignSelf: \"center\",\n    marginTop: 100,\n    marginBottom: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/screens/LoginScreen.js"],"names":["React","useEffect","Yup","coinIDDataApi","useApi","AppForm","AppFormField","SubmitButton","coinIDData","validationSchema","object","shape","email","string","required","label","password","min","LoginScreen","navigation","getCoinIDDataApi","getCoinIDData","request","styles","container","flex","alignItems","backgroundImage","require","logo","values","console","log","navigate","StyleSheet","create","padding","position","width","height","resizeMode","alignSelf","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { StyleSheet, View, Image } from \"react-native\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport coinIDDataApi from \"../api/coinIDDataApi\";\r\nimport useApi from \"../Hooks/useApi\";\r\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\r\n\r\n/* The reason im defining this outside our function, we dont want our object to get redefined each time our function gets rerendered */\r\nconst coinIDData = [];\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().required().email().label(\"Email\"),\r\n  password: Yup.string().required().min(4).label(\"Password\"),\r\n});\r\n\r\nfunction LoginScreen({ navigation }) {\r\n  const getCoinIDDataApi = useApi(coinIDDataApi.getCoinIDData, true);\r\n\r\n  useEffect(() => {\r\n    coinIDData = getCoinIDDataApi.request();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ flex: 1, alignItems: \"center\" }}>\r\n        <Image\r\n          style={styles.backgroundImage}\r\n          source={require(\"../assets/images/stocksbackground.jpg\")}\r\n        />\r\n        <Image\r\n          style={styles.logo}\r\n          source={require(\"../assets/images/coincoinlogo.png\")}\r\n        />\r\n        <AppForm\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={(values) => {\r\n            console.log(values);\r\n            //Passing the coinIDData to the stack screen\r\n            console.log(coinIDData);\r\n            navigation.navigate(\"TabNavigator\", { coinIDData });\r\n          }}\r\n          validationSchema={validationSchema}\r\n        >\r\n          <AppFormField\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            keyboardType=\"email-address\"\r\n            name=\"email\"\r\n            iconName=\"mail\"\r\n            placeholder=\"Email\"\r\n            textContentType=\"emailAddress\"\r\n          />\r\n\r\n          <AppFormField\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            name=\"password\"\r\n            iconName=\"lock\"\r\n            placeholder=\"Password\"\r\n            secureTextEntry\r\n            textContentType=\"password\"\r\n          />\r\n\r\n          <SubmitButton title={\"login\"} />\r\n        </AppForm>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n\r\n  backgroundImage: {\r\n    position: \"absolute\",\r\n    flex: 1,\r\n    width: 1380,\r\n    height: 1035,\r\n    resizeMode: \"contain\",\r\n  },\r\n\r\n  logo: {\r\n    width: 180,\r\n    height: 200,\r\n    alignSelf: \"center\",\r\n    marginTop: 100,\r\n    marginBottom: 100,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}