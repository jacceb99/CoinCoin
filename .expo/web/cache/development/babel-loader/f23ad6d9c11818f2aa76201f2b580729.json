{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport coinMarketData from \"./coinMarketData\";\nimport React, { useState, useEffect } from \"react\";\nimport storeCoinID from \"./storeCoinId\";\n\nfunction storeMarketData(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coinMarket = _useState2[0],\n      setCoinMarket = _useState2[1];\n\n  var arraytest = [];\n  useEffect(function () {\n    loadCoinMarketData();\n  }, []);\n  var coinID = storeCoinID();\n\n  var loadCoinMarketData = function loadCoinMarketData() {\n    var marketResponse;\n    return _regeneratorRuntime.async(function loadCoinMarketData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(coinMarketData.getCoinMarketData(coinID[0]));\n\n          case 2:\n            marketResponse = _context.sent;\n            arraytest[0] = marketResponse.data;\n            console.log(\"CoinMarketen:\", arraytest);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return coinMarket;\n}\n\nexport default storeMarketData;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/api/storeMarketData.js"],"names":["coinMarketData","React","useState","useEffect","storeCoinID","storeMarketData","props","coinMarket","setCoinMarket","arraytest","loadCoinMarketData","coinID","getCoinMarketData","marketResponse","data","console","log"],"mappings":";;AAAA,OAAOA,cAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,kBACMJ,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACvBK,UADuB;AAAA,MACXC,aADW;;AAE9B,MAAIC,SAAS,GAAG,EAAhB;AACAN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAMC,MAAM,GAAGP,WAAW,EAA1B;;AAGA,MAAMM,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIV,cAAc,CAACY,iBAAf,CAAiCD,MAAM,CAAC,CAAD,CAAvC,CADJ;;AAAA;AACnBE,YAAAA,cADmB;AAEzBJ,YAAAA,SAAS,CAAC,CAAD,CAAT,GAAeI,cAAc,CAACC,IAA9B;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,SAA7B;;AAHyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAMA,SAAOF,UAAP;AACD;;AAED,eAAeF,eAAf","sourcesContent":["import coinMarketData from \"./coinMarketData\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport storeCoinID from \"./storeCoinId\";\r\n\r\nfunction storeMarketData(props) {\r\n  const [coinMarket, setCoinMarket] = useState([]);\r\n  let arraytest = [];\r\n  useEffect(() => {\r\n    loadCoinMarketData();\r\n  }, []);\r\n\r\n  const coinID = storeCoinID(); //CoinID = arrayen med alla coins, de har tre properties id,symbol och name.\r\n\r\n  //Loading marketdata\r\n  const loadCoinMarketData = async () => {\r\n    const marketResponse = await coinMarketData.getCoinMarketData(coinID[0]);\r\n    arraytest[0] = marketResponse.data;\r\n    console.log(\"CoinMarketen:\", arraytest);\r\n  };\r\n\r\n  return coinMarket;\r\n}\r\n\r\nexport default storeMarketData;\r\n"]},"metadata":{},"sourceType":"module"}