{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar App = function (_React$component) {\n  _inherits(App, _React$component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.apiCall();\n    }\n  }, {\n    key: \"apiCall\",\n    value: function apiCall() {\n      var resp, respJson;\n      return _regeneratorRuntime.async(function apiCall$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=us\"));\n\n            case 2:\n              resp = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 5:\n              respJson = _context.sent;\n              console.warn(respJson);\n              this.setState({\n                data: respJson\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, \"Test\"), React.createElement(\"flatlist\", {\n        data: this.state.data,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Text, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 35\n            }\n          }, item.title);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.component);\n\nexport default api;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/App.js"],"names":["React","App","state","data","apiCall","fetch","resp","json","respJson","console","warn","setState","item","title","component","api"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;IAGMC,G;;;;;AAEN,iBACA;AAAA;;AAAA;;AACA;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAC;AADE,KAAX;AAFA;AAKC;;;;WAED,6BACA;AACA,WAAKC,OAAL;AAGC;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEgBC,KAAK,CAAC,4EAAD,CAFrB;;AAAA;AAEIC,cAAAA,IAFJ;AAAA;AAAA,+CAGqBA,IAAI,CAACC,IAAL,EAHrB;;AAAA;AAGIC,cAAAA,QAHJ;AAIAC,cAAAA,OAAO,CAACC,IAAR,CAAaF,QAAb;AACA,mBAAKG,QAAL,CAAc;AAACR,gBAAAA,IAAI,EAACK;AAAN,eAAd;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAQA,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII;AAAU,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,IAA3B;AACA,QAAA,UAAU,EAAE;AAAA,cAAES,IAAF,QAAEA,IAAF;AAAA,iBAAU,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOA,IAAI,CAACC,KAAZ,CAAV;AAAA,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAcH;;;;EAxCiBb,KAAK,CAACc,S;;AA2CxB,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport { ActivityIndicator, FlatList } from 'react-native';\n\nclass App extends React.component{\n\nconstructor()\n{\nsuper();\nthis.state={\n    data:[]\n}\n}\n\ncomponentDidMount()\n{\nthis.apiCall();\n\n\n}\n\nasync apiCall()\n{\nlet resp =await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=us\")\nlet respJson = await resp.json()\nconsole.warn(respJson)\nthis.setState({data:respJson})\n}\n\nrender() {\n    return (\n        <View>\n            <Text>\n                Test\n            </Text>\n            <flatlist data={this.state.data}\n            renderItem={({item})=><Text>{item.title}</Text>\n            \n    }\n    />\n        </View>\n\n\n    );\n}\n}\n\nexport default api;"]},"metadata":{},"sourceType":"module"}