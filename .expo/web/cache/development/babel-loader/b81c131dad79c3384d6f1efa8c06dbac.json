{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\components\\\\ImageInput.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport colors from \"../config/colors\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\n\nfunction ImageInput(imageUri, onChangeImage) {\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n            if (!granted) alert(\"You need to able permission to access gallery\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    requestPermission();\n  }, []);\n\n  var selectImage = function selectImage() {\n    var result;\n    return _regeneratorRuntime.async(function selectImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 3:\n            result = _context2.sent;\n            if (!result.cancelled) setImageUri(result.uri);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Error reading an image\");\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, !imageUri && React.createElement(AntDesign, {\n    name: \"camera\",\n    size: 40,\n    color: colors.dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }), React.createElement(Image, {\n    source: {\n      uri: imageUri\n    },\n    style: styles.imageStyle,\n    onPress: onChangeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    borderRadius: 20,\n    backgroundColor: colors.light,\n    overflow: \"hidden\",\n    width: 200,\n    height: 200,\n    justifyContent: \"center\"\n  },\n  imageStyle: {}\n});\nexport default ImageInput;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/components/ImageInput.js"],"names":["React","useEffect","useState","ImagePicker","colors","AntDesign","Colors","ImageInput","imageUri","onChangeImage","requestPermission","requestMediaLibraryPermissionsAsync","granted","alert","selectImage","launchImageLibraryAsync","result","cancelled","setImageUri","uri","console","log","styles","container","dark","imageStyle","StyleSheet","create","alignItems","borderRadius","backgroundColor","light","overflow","width","height","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,MAAP;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT,QAAuB,qCAAvB;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,aAA9B,EAA6C;AAE3C,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEP,WAAW,CAACQ,mCAAZ,EADF;;AAAA;AAAA;AAChBC,YAAAA,OADgB,yBAChBA,OADgB;AAExB,gBAAI,CAACA,OAAL,EAAcC,KAAK,CAAC,+CAAD,CAAL;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAMAZ,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMI,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEKX,WAAW,CAACY,uBAAZ,EAFL;;AAAA;AAEVC,YAAAA,MAFU;AAIhB,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuBC,WAAW,CAACF,MAAM,CAACG,GAAR,CAAX;AAJP;AAAA;;AAAA;AAAA;AAAA;AAMhBC,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACf,QAAD,IAAa,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,QAAjB;AAA2B,IAAA,IAAI,EAAE,EAAjC;AAAqC,IAAA,KAAK,EAAEJ,MAAM,CAACoB,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,EAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE;AAAEL,MAAAA,GAAG,EAAEX;AAAP,KADV;AAEE,IAAA,KAAK,EAAEc,MAAM,CAACG,UAFhB;AAGE,IAAA,OAAO,EAAEhB,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD;;AAED,IAAMa,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,YAAY,EAAE,EAFL;AAGTC,IAAAA,eAAe,EAAE1B,MAAM,CAAC2B,KAHf;AAITC,IAAAA,QAAQ,EAAE,QAJD;AAKTC,IAAAA,KAAK,EAAE,GALE;AAMTC,IAAAA,MAAM,EAAE,GANC;AAOTC,IAAAA,cAAc,EAAE;AAPP,GADoB;AAW/BV,EAAAA,UAAU,EAAE;AAXmB,CAAlB,CAAf;AAcA,eAAelB,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet, Image } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport colors from \"../config/colors\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\r\n\r\nfunction ImageInput(imageUri, onChangeImage) {\r\n  //Requesting permission to use media library\r\n  const requestPermission = async () => {\r\n    const { granted } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (!granted) alert(\"You need to able permission to access gallery\");\r\n  };\r\n\r\n  //Calling the request permission here as useEffect cant be in async\r\n  useEffect(() => {\r\n    requestPermission();\r\n  }, []);\r\n\r\n  const selectImage = async () => {\r\n    try {\r\n      const result = await ImagePicker.launchImageLibraryAsync();\r\n      //If the user doesent cancell\r\n      if (!result.cancelled) setImageUri(result.uri);\r\n    } catch (error) {\r\n      console.log(\"Error reading an image\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {!imageUri && <AntDesign name={\"camera\"} size={40} color={colors.dark} />}\r\n      <Image\r\n        source={{ uri: imageUri }}\r\n        style={styles.imageStyle}\r\n        onPress={onChangeImage}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    borderRadius: 20,\r\n    backgroundColor: colors.light,\r\n    overflow: \"hidden\",\r\n    width: 200,\r\n    height: 200,\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  imageStyle: {},\r\n});\r\n\r\nexport default ImageInput;\r\n"]},"metadata":{},"sourceType":"module"}