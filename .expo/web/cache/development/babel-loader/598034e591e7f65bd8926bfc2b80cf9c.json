{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\screens\\\\CoinInputScreen.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Yup from \"yup\";\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\nimport colors from \"../config/colors\";\nimport IconButton from \"../components/IconButton\";\nimport coinIDDataApi from \"../api/coinIDDataApi\";\nvar validationSchema = Yup.object().shape({\n  ticker: Yup.string().required().label(\"Ticker\")\n});\n\nfunction CoinInputScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(IconButton, {\n    iconName: \"closecircle\",\n    iconColor: colors.white,\n    onPress: function onPress() {\n      return navigation.navigate(\"WatchlistScreen\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(AppForm, {\n    initialValues: {\n      ticker: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      navigation.navigate(\"WatchlistScreen\", {\n        userInput: values.ticker\n      });\n    },\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(AppFormField, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    name: \"ticker\",\n    iconName: \"linechart\",\n    placeholder: \"Write coin ticker or name, eg. BTC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.background,\n    paddingTop: 10,\n    flex: 1\n  },\n  button: {\n    width: \"100%\"\n  }\n});\nexport default CoinInputScreen;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/screens/CoinInputScreen.js"],"names":["React","Yup","AppForm","AppFormField","SubmitButton","colors","IconButton","coinIDDataApi","validationSchema","object","shape","ticker","string","required","label","CoinInputScreen","navigation","route","styles","container","marginLeft","white","navigate","alignItems","margin","values","userInput","StyleSheet","create","backgroundColor","background","paddingTop","flex","button","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,YAAhC;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,gBAAgB,GAAGP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,MAAM,EAAEV,GAAG,CAACW,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,QAA9B;AADkC,CAAnB,CAAzB;;AAIA,SAASC,eAAT,OAAgD;AAAA,MAArBC,UAAqB,QAArBA,UAAqB;AAAA,MAATC,KAAS,QAATA,KAAS;AAC9C,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAE,aADZ;AAEE,IAAA,SAAS,EAAEf,MAAM,CAACgB,KAFpB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAML,UAAU,CAACM,QAAX,CAAoB,iBAApB,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,aAAa,EAAE;AAAEb,MAAAA,MAAM,EAAE;AAAV,KADjB;AAEE,IAAA,QAAQ,EAAE,kBAACc,MAAD,EAAY;AACpBT,MAAAA,UAAU,CAACM,QAAX,CAAoB,iBAApB,EAAuC;AACrCI,QAAAA,SAAS,EAAED,MAAM,CAACd;AADmB,OAAvC;AAGD,KANH;AAOE,IAAA,gBAAgB,EAAEH,gBAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,YAAD;AACE,IAAA,cAAc,EAAC,MADjB;AAEE,IAAA,WAAW,EAAE,KAFf;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,QAAQ,EAAC,WAJX;AAKE,IAAA,WAAW,EAAC,oCALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CARF,CADF;AAgCD;;AAED,IAAMU,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,eAAe,EAAExB,MAAM,CAACyB,UADf;AAGTC,IAAAA,UAAU,EAAE,EAHH;AAITC,IAAAA,IAAI,EAAE;AAJG,GADoB;AAQ/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE;AADD;AARuB,CAAlB,CAAf;AAaA,eAAenB,eAAf","sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\r\nimport colors from \"../config/colors\";\r\nimport IconButton from \"../components/IconButton\";\r\nimport coinIDDataApi from \"../api/coinIDDataApi\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  ticker: Yup.string().required().label(\"Ticker\"),\r\n});\r\n\r\nfunction CoinInputScreen({ navigation, route }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ marginLeft: 20 }}>\r\n        <IconButton\r\n          iconName={\"closecircle\"}\r\n          iconColor={colors.white}\r\n          onPress={() => navigation.navigate(\"WatchlistScreen\")}\r\n        />\r\n      </View>\r\n      <View style={{ alignItems: \"center\", margin: 20 }}>\r\n        <AppForm\r\n          initialValues={{ ticker: \"\" }}\r\n          onSubmit={(values) => {\r\n            navigation.navigate(\"WatchlistScreen\", {\r\n              userInput: values.ticker,\r\n            });\r\n          }}\r\n          validationSchema={validationSchema}\r\n        >\r\n          <AppFormField\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            name=\"ticker\"\r\n            iconName=\"linechart\"\r\n            placeholder=\"Write coin ticker or name, eg. BTC\"\r\n          />\r\n\r\n          <SubmitButton title={\"Add\"} />\r\n        </AppForm>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.background,\r\n\r\n    paddingTop: 10,\r\n    flex: 1,\r\n  },\r\n\r\n  button: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default CoinInputScreen;\r\n"]},"metadata":{},"sourceType":"module"}