{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\components\\\\ItemList.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListItem from \"./ListItem\";\nimport ListItemDeleteAction from \"./ListItemDeleteAction\";\nimport ListItemSeperator from \"./ListItemSeperator\";\nimport coinMarketData from \"../api/coinMarketData\";\nimport coinIDData from \"../api/coinIDData\";\nimport ActivityIndicator from \"./ActivityIndicator\";\nimport Error from \"./AppText\";\nimport AppButton from \"./AppButton\";\nimport IconButton from \"./IconButton\";\nimport colors from \"../config/colors\";\n\nfunction ItemList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coins = _useState2[0],\n      setCoins = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var userInputCoinID = \"ada\";\n  userInputCoinID = userInputCoinID.toLowerCase();\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      coinMarket = _useState10[0],\n      setCoinMarket = _useState10[1];\n\n  useEffect(function () {\n    loadCoinMarketData();\n  }, []);\n\n  var loadCoinMarketData = function loadCoinMarketData() {\n    var response;\n    return _regeneratorRuntime.async(function loadCoinMarketData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(coinMarketData.getCoinMarketData(\"bitcoin\"));\n\n          case 3:\n            response = _context.sent;\n            setLoading(false);\n\n            if (response.ok) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setError(true));\n\n          case 7:\n            setError(false);\n            setCoinMarket(response.data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleDelete = function handleDelete(coin) {\n    setCoins(coins.filter(function (m) {\n      return m.id !== coin.id;\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.styleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, error && React.createElement(React.Fragment, null, React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Couldn't Retrieve Data\"), React.createElement(AppButton, {\n    title: \"Retry\",\n    onPress: loadCoinMarketData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), React.createElement(ActivityIndicator, {\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), \")} ItemSeparatorComponent=\", ListItemSeperator, \"refreshing=\", refreshing, \"onRefresh=\", function () {\n    setCoins([{\n      id: 2,\n      title: \"UNI\",\n      description: \"27.30$\",\n      image: require(\"../assets/coins/uni.png\")\n    }]);\n  }, \"/>\", React.createElement(IconButton, {\n    iconName: \"pluscircle\",\n    iconColor: colors.white,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ItemList;\nvar styles = StyleSheet.create({\n  styleContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/components/ItemList.js"],"names":["React","useState","useEffect","ListItem","ListItemDeleteAction","ListItemSeperator","coinMarketData","coinIDData","ActivityIndicator","Error","AppButton","IconButton","colors","ItemList","props","coins","setCoins","refreshing","setRefreshing","error","setError","loading","setLoading","userInputCoinID","toLowerCase","coinMarket","setCoinMarket","loadCoinMarketData","getCoinMarketData","response","ok","data","handleDelete","coin","filter","m","id","styles","styleContainer","title","description","image","require","white","StyleSheet","create","width","alignItems","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAGA,OAAOC,QAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,KAAP;AACA,OAAOC,SAAP;AAEA,OAAOC,UAAP;AACA,OAAOC,MAAP;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,kBACGb,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,MAChBc,KADgB;AAAA,MACTC,QADS;;AAAA,mBAEaf,QAAQ,CAAC,KAAD,CAFrB;AAAA;AAAA,MAEhBgB,UAFgB;AAAA,MAEJC,aAFI;;AAAA,mBAGGjB,QAAQ,CAAC,KAAD,CAHX;AAAA;AAAA,MAGhBkB,KAHgB;AAAA,MAGTC,QAHS;;AAAA,mBAIOnB,QAAQ,CAAC,KAAD,CAJf;AAAA;AAAA,MAIhBoB,OAJgB;AAAA,MAIPC,UAJO;;AAKvB,MAAIC,eAAe,GAAG,KAAtB;AACAA,EAAAA,eAAe,GAAGA,eAAe,CAACC,WAAhB,EAAlB;;AANuB,mBAOavB,QAAQ,CAAC,EAAD,CAPrB;AAAA;AAAA,MAOhBwB,UAPgB;AAAA,MAOJC,aAPI;;AASvBxB,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAMA,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBL,YAAAA,UAAU,CAAC,IAAD,CAAV;AADyB;AAAA,6CAEFhB,cAAc,CAACsB,iBAAf,CAAiC,SAAjC,CAFE;;AAAA;AAEnBC,YAAAA,QAFmB;AAGzBP,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAHyB,gBAIpBO,QAAQ,CAACC,EAJW;AAAA;AAAA;AAAA;;AAAA,6CAIAV,QAAQ,CAAC,IAAD,CAJR;;AAAA;AAMzBA,YAAAA,QAAQ,CAAC,KAAD,CAAR;AACAM,YAAAA,aAAa,CAACG,QAAQ,CAACE,IAAV,CAAb;;AAPyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAWA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7BjB,IAAAA,QAAQ,CAACD,KAAK,CAACmB,MAAN,CAAa,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,EAAF,KAASH,IAAI,CAACG,EAArB;AAAA,KAAb,CAAD,CAAR;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,KAAK,IACJ,0CACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAEQ,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,EAOE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,gCA2B6BtB,iBA3B7B,iBA4BcY,UA5Bd,gBA8BG,YAAM;AACLD,IAAAA,QAAQ,CAAC,CACP;AACEoB,MAAAA,EAAE,EAAE,CADN;AAEEG,MAAAA,KAAK,EAAE,KAFT;AAGEC,MAAAA,WAAW,EAAE,QAHf;AAIEC,MAAAA,KAAK,EAAEC,OAAO;AAJhB,KADO,CAAD,CAAR;AAQD,GAvCH,QAyCE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAE,YAAtB;AAAoC,IAAA,SAAS,EAAE9B,MAAM,CAAC+B,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,CADF;AA6CD;;AAED,eAAe9B,QAAf;AAEA,IAAMwB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,cAAc,EAAE;AACdQ,IAAAA,KAAK,EAAE,MADO;AAEdC,IAAAA,UAAU,EAAE,QAFE;AAGdC,IAAAA,cAAc,EAAE;AAHF;AADe,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FlatList, StyleSheet, View } from \"react-native\";\r\n\r\nimport ListItem from \"./ListItem\";\r\nimport ListItemDeleteAction from \"./ListItemDeleteAction\";\r\nimport ListItemSeperator from \"./ListItemSeperator\";\r\nimport coinMarketData from \"../api/coinMarketData\";\r\nimport coinIDData from \"../api/coinIDData\";\r\nimport ActivityIndicator from \"./ActivityIndicator\";\r\nimport Error from \"./AppText\";\r\nimport AppButton from \"./AppButton\";\r\n\r\nimport IconButton from \"./IconButton\";\r\nimport colors from \"../config/colors\";\r\n\r\nfunction ItemList(props) {\r\n  const [coins, setCoins] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  let userInputCoinID = \"ada\";\r\n  userInputCoinID = userInputCoinID.toLowerCase();\r\n  const [coinMarket, setCoinMarket] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCoinMarketData();\r\n  }, []);\r\n\r\n  //Loading marketdata\r\n  const loadCoinMarketData = async () => {\r\n    setLoading(true);\r\n    const response = await coinMarketData.getCoinMarketData(\"bitcoin\");\r\n    setLoading(false);\r\n    if (!response.ok) return setError(true);\r\n\r\n    setError(false);\r\n    setCoinMarket(response.data);\r\n  };\r\n\r\n  //Handle to Delete a coin from the list\r\n  const handleDelete = (coin) => {\r\n    setCoins(coins.filter((m) => m.id !== coin.id));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.styleContainer}>\r\n      {error && (\r\n        <>\r\n          <Error>Couldn't Retrieve Data</Error>\r\n          <AppButton title=\"Retry\" onPress={loadCoinMarketData} />\r\n        </>\r\n      )}\r\n      <ActivityIndicator visible={true} />\r\n      {/* <FlatList\r\n        style={{ width: \"100%\" }}\r\n        data={coinMarket}\r\n        keyExtractor={(coin) => coin.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <ListItem\r\n            title={item.symbol}\r\n            imageUrl={item.image}\r\n            size={48}\r\n            price={item.current_price}\r\n            oneHour={item.price_change_percentage_1h_in_currency}\r\n            twentyFourHours={item.price_change_percentage_24h_in_currency}\r\n            sevenDays={item.price_change_percentage_7d_in_currency}\r\n            thirtyDays={item.price_change_percentage_30d_in_currency}\r\n            onPress={() => console.log(\"Item selected\", item)}\r\n            renderRightActions={() => (\r\n              <ListItemDeleteAction onPress={() => handleDelete(item)} />\r\n            )}\r\n          /> */}\r\n      )} ItemSeparatorComponent={ListItemSeperator}\r\n      refreshing={refreshing}\r\n      onRefresh=\r\n      {() => {\r\n        setCoins([\r\n          {\r\n            id: 2,\r\n            title: \"UNI\",\r\n            description: \"27.30$\",\r\n            image: require(\"../assets/coins/uni.png\"),\r\n          },\r\n        ]);\r\n      }}\r\n      />\r\n      <IconButton iconName={\"pluscircle\"} iconColor={colors.white} />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n\r\nconst styles = StyleSheet.create({\r\n  styleContainer: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}