{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\AwesomeProject\\\\app\\\\components\\\\ItemList.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListItem from \"./ListItem\";\nimport ListItemDeleteAction from \"./ListItemDeleteAction\";\nimport ListItemSeperator from \"./ListItemSeperator\";\nimport coinMarketData from \"../api/coinMarketData\";\nimport coinIDData from \"../api/coinIDData\";\nimport Error from \"./AppText\";\nimport IconButton from \"./IconButton\";\nimport colors from \"../config/colors\";\n\nfunction ItemList(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coins = _useState2[0],\n      setCoins = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var userInputCoinID = \"ada\";\n  userInputCoinID = userInputCoinID.toLowerCase();\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      coinMarket = _useState8[0],\n      setCoinMarket = _useState8[1];\n\n  useEffect(function () {\n    loadCoinMarketData();\n  }, []);\n\n  var loadCoinMarketData = function loadCoinMarketData() {\n    var marketResponse;\n    return _regeneratorRuntime.async(function loadCoinMarketData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(coinMarketData.getCoinMarketData(\"bitcoin\"));\n\n          case 2:\n            marketResponse = _context.sent;\n\n            if (response.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setError(true));\n\n          case 5:\n            setError(false);\n            setCoinMarket(marketResponse.data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleDelete = function handleDelete(coin) {\n    setCoins(coins.filter(function (m) {\n      return m.id !== coin.id;\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.styleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, error && React.createElement(React.Fragment, null, \" \", React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Couldn't Retrieve Data\"), \" \"), React.createElement(FlatList, {\n    style: {\n      width: \"100%\"\n    },\n    data: coinMarket,\n    keyExtractor: function keyExtractor(coin) {\n      return coin.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        title: item.symbol,\n        imageUrl: item.image,\n        size: 48,\n        price: item.current_price,\n        oneHour: item.price_change_percentage_1h_in_currency,\n        twentyFourHours: item.price_change_percentage_24h_in_currency,\n        sevenDays: item.price_change_percentage_7d_in_currency,\n        thirtyDays: item.price_change_percentage_30d_in_currency,\n        onPress: function onPress() {\n          return console.log(\"Item selected\", item);\n        },\n        renderRightActions: function renderRightActions() {\n          return React.createElement(ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      });\n    },\n    ItemSeparatorComponent: ListItemSeperator,\n    refreshing: refreshing,\n    onRefresh: function onRefresh() {\n      setCoins([{\n        id: 2,\n        title: \"UNI\",\n        description: \"27.30$\",\n        image: require(\"../assets/coins/uni.png\")\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(IconButton, {\n    iconName: \"pluscircle\",\n    iconColor: colors.white,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"hello\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ItemList;\nvar styles = StyleSheet.create({\n  styleContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/components/ItemList.js"],"names":["React","useState","useEffect","ListItem","ListItemDeleteAction","ListItemSeperator","coinMarketData","coinIDData","Error","IconButton","colors","ItemList","props","coins","setCoins","refreshing","setRefreshing","error","setError","userInputCoinID","toLowerCase","coinMarket","setCoinMarket","loadCoinMarketData","getCoinMarketData","marketResponse","response","ok","data","handleDelete","coin","filter","m","id","styles","styleContainer","width","toString","item","symbol","image","current_price","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","price_change_percentage_30d_in_currency","console","log","title","description","require","white","StyleSheet","create","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, FlatList, StyleSheet, View } from \"react-native\";\r\n\r\nimport ListItem from \"./ListItem\";\r\nimport ListItemDeleteAction from \"./ListItemDeleteAction\";\r\nimport ListItemSeperator from \"./ListItemSeperator\";\r\nimport coinMarketData from \"../api/coinMarketData\";\r\nimport coinIDData from \"../api/coinIDData\";\r\nimport Error from \"./AppText\";\r\n\r\nimport IconButton from \"./IconButton\";\r\nimport colors from \"../config/colors\";\r\n\r\nfunction ItemList(props) {\r\n  const [coins, setCoins] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  let userInputCoinID = \"ada\";\r\n  userInputCoinID = userInputCoinID.toLowerCase();\r\n  const [coinMarket, setCoinMarket] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCoinMarketData();\r\n  }, []);\r\n\r\n  //Loading marketdata\r\n  const loadCoinMarketData = async () => {\r\n    const marketResponse = await coinMarketData.getCoinMarketData(\"bitcoin\");\r\n    if (!response.ok) return setError(true);\r\n\r\n    setError(false);\r\n    setCoinMarket(marketResponse.data);\r\n  };\r\n\r\n  //Handle to Delete a coin from the list\r\n  const handleDelete = (coin) => {\r\n    setCoins(coins.filter((m) => m.id !== coin.id));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.styleContainer}>\r\n      {error && (\r\n        <>\r\n          {\" \"}\r\n          <Error>Couldn't Retrieve Data</Error>{\" \"}\r\n        </>\r\n      )}\r\n      <FlatList\r\n        style={{ width: \"100%\" }}\r\n        data={coinMarket}\r\n        keyExtractor={(coin) => coin.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <ListItem\r\n            title={item.symbol}\r\n            imageUrl={item.image}\r\n            size={48}\r\n            price={item.current_price}\r\n            oneHour={item.price_change_percentage_1h_in_currency}\r\n            twentyFourHours={item.price_change_percentage_24h_in_currency}\r\n            sevenDays={item.price_change_percentage_7d_in_currency}\r\n            thirtyDays={item.price_change_percentage_30d_in_currency}\r\n            onPress={() => console.log(\"Item selected\", item)}\r\n            renderRightActions={() => (\r\n              <ListItemDeleteAction onPress={() => handleDelete(item)} />\r\n            )}\r\n          />\r\n        )}\r\n        ItemSeparatorComponent={ListItemSeperator}\r\n        refreshing={refreshing}\r\n        onRefresh={() => {\r\n          setCoins([\r\n            {\r\n              id: 2,\r\n              title: \"UNI\",\r\n              description: \"27.30$\",\r\n              image: require(\"../assets/coins/uni.png\"),\r\n            },\r\n          ]);\r\n        }}\r\n      />\r\n\r\n      <IconButton iconName={\"pluscircle\"} iconColor={colors.white} />\r\n      <Button title={\"hello\"} />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n\r\nconst styles = StyleSheet.create({\r\n  styleContainer: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}