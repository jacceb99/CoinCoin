{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from\"react\";import{AntDesign}from\"@expo/vector-icons\";import Button from\"react-native-web/dist/exports/Button\";import FlatList from\"react-native-web/dist/exports/FlatList\";import Modal from\"react-native-web/dist/exports/Modal\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import colors from\"../config/colors\";import PickerItem from\"./PickerItem\";import{PickerText}from\"./AppText\";function AppPicker(_ref){var iconName=_ref.iconName,items=_ref.items,placeholder=_ref.placeholder,selectedItem=_ref.selectedItem,onSelectItem=_ref.onSelectItem;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalVisible=_useState2[0],setModalVisible=_useState2[1];return React.createElement(React.Fragment,null,React.createElement(TouchableWithoutFeedback,{onPress:function onPress(){return setModalVisible(true);}},React.createElement(View,{style:styles.styleContainer},iconName&&React.createElement(AntDesign,{name:iconName,size:20,style:{color:colors.textcolor,marginRight:10}}),React.createElement(PickerText,null,\" \",selectedItem?selectedItem.label:placeholder,\" \"),React.createElement(AntDesign,{name:\"down\",size:20,style:{color:colors.textcolor}}))),React.createElement(Modal,{visible:modalVisible,animationType:\"slide\"},React.createElement(Button,{title:\"close\",onPress:function onPress(){return setModalVisible(false);}}),React.createElement(FlatList,{data:items,keyExtractor:function keyExtractor(item){return item.value.toString();},renderItem:function renderItem(_ref2){var item=_ref2.item;return React.createElement(PickerItem,{label:item.label,onPress:function onPress(){setModalVisible(false);onSelectItem(item);}});}})));}export default AppPicker;var styles=StyleSheet.create({styleContainer:{backgroundColor:colors.light,flexDirection:\"row\",width:\"100%\",padding:9,alignItems:\"center\"}});","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/components/AppPicker.js"],"names":["React","useState","AntDesign","colors","PickerItem","PickerText","AppPicker","iconName","items","placeholder","selectedItem","onSelectItem","modalVisible","setModalVisible","styles","styleContainer","color","textcolor","marginRight","label","item","value","toString","StyleSheet","create","backgroundColor","light","flexDirection","width","padding","alignItems"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,SAAT,KAA0B,oBAA1B,C,qbAUA,MAAOC,CAAAA,MAAP,wBACA,MAAOC,CAAAA,UAAP,oBACA,OAASC,UAAT,iBAEA,QAASC,CAAAA,SAAT,MAMG,IALDC,CAAAA,QAKC,MALDA,QAKC,CAJDC,KAIC,MAJDA,KAIC,CAHDC,WAGC,MAHDA,WAGC,CAFDC,YAEC,MAFDA,YAEC,CADDC,YACC,MADDA,YACC,eACuCV,QAAQ,CAAC,KAAD,CAD/C,wCACMW,YADN,eACoBC,eADpB,eAGD,MACE,yCACE,oBAAC,wBAAD,EAA0B,OAAO,CAAE,yBAAMA,CAAAA,eAAe,CAAC,IAAD,CAArB,EAAnC,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,cAApB,EACGR,QAAQ,EACP,oBAAC,SAAD,EACE,IAAI,CAAEA,QADR,CAEE,IAAI,CAAE,EAFR,CAGE,KAAK,CAAE,CAAES,KAAK,CAAEb,MAAM,CAACc,SAAhB,CAA2BC,WAAW,CAAE,EAAxC,CAHT,EAFJ,CASE,oBAAC,UAAD,MACG,GADH,CAEGR,YAAY,CAAGA,YAAY,CAACS,KAAhB,CAAwBV,WAFvC,CAEoD,GAFpD,CATF,CAaE,oBAAC,SAAD,EACE,IAAI,CAAE,MADR,CAEE,IAAI,CAAE,EAFR,CAGE,KAAK,CAAE,CAAEO,KAAK,CAAEb,MAAM,CAACc,SAAhB,CAHT,EAbF,CADF,CADF,CAuBE,oBAAC,KAAD,EAAO,OAAO,CAAEL,YAAhB,CAA8B,aAAa,CAAC,OAA5C,EACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,OAAd,CAAsB,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAAC,KAAD,CAArB,EAA/B,EADF,CAEE,oBAAC,QAAD,EACE,IAAI,CAAEL,KADR,CAEE,YAAY,CAAE,sBAACY,IAAD,QAAUA,CAAAA,IAAI,CAACC,KAAL,CAAWC,QAAX,EAAV,EAFhB,CAGE,UAAU,CAAE,8BAAGF,CAAAA,IAAH,OAAGA,IAAH,OACV,qBAAC,UAAD,EACE,KAAK,CAAEA,IAAI,CAACD,KADd,CAEE,OAAO,CAAE,kBAAM,CACbN,eAAe,CAAC,KAAD,CAAf,CACAF,YAAY,CAACS,IAAD,CAAZ,CACD,CALH,EADU,EAHd,EAFF,CAvBF,CADF,CA0CD,CAED,cAAed,CAAAA,SAAf,CAEA,GAAMQ,CAAAA,MAAM,CAAGS,UAAU,CAACC,MAAX,CAAkB,CAC/BT,cAAc,CAAE,CACdU,eAAe,CAAEtB,MAAM,CAACuB,KADV,CAEdC,aAAa,CAAE,KAFD,CAGdC,KAAK,CAAE,MAHO,CAIdC,OAAO,CAAE,CAJK,CAMdC,UAAU,CAAE,QANE,CADe,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport {\r\n  Button,\r\n  FlatList,\r\n  Modal,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport PickerItem from \"./PickerItem\";\r\nimport { PickerText } from \"./AppText\";\r\n\r\nfunction AppPicker({\r\n  iconName,\r\n  items,\r\n  placeholder,\r\n  selectedItem,\r\n  onSelectItem,\r\n}) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <TouchableWithoutFeedback onPress={() => setModalVisible(true)}>\r\n        <View style={styles.styleContainer}>\r\n          {iconName && (\r\n            <AntDesign\r\n              name={iconName}\r\n              size={20}\r\n              style={{ color: colors.textcolor, marginRight: 10 }}\r\n            />\r\n          )}\r\n          {/*if the selectedItem is defined, render the selectedItem.label otherwise render the placeholder */}\r\n          <PickerText>\r\n            {\" \"}\r\n            {selectedItem ? selectedItem.label : placeholder}{\" \"}\r\n          </PickerText>\r\n          <AntDesign\r\n            name={\"down\"}\r\n            size={20}\r\n            style={{ color: colors.textcolor }}\r\n          />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n      {/* Modal visible uses bolean, true = visible, false = invisible */}\r\n      <Modal visible={modalVisible} animationType=\"slide\">\r\n        <Button title=\"close\" onPress={() => setModalVisible(false)} />\r\n        <FlatList\r\n          data={items}\r\n          keyExtractor={(item) => item.value.toString()}\r\n          renderItem={({ item }) => (\r\n            <PickerItem\r\n              label={item.label}\r\n              onPress={() => {\r\n                setModalVisible(false);\r\n                onSelectItem(item);\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppPicker;\r\n\r\nconst styles = StyleSheet.create({\r\n  styleContainer: {\r\n    backgroundColor: colors.light,\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    padding: 9,\r\n\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}