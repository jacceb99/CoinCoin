{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import colors from\"../config/colors\";import ItemList from\"../components/ItemList\";import IconButton from\"../components/IconButton\";import AppPicker from\"../components/AppPicker\";function WatchlistScreen(props){var categories=[{label:\"Sort by price (Rising)\",value:1},{label:\"Sort by price (Descending)\",value:2},{label:\"Sort by market cap (Rising)\",value:3},{label:\"Sort by market cap (Descending)\",value:4}];var _useState=useState(categories[0]),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];console.log(\"App executed\");var handlePress=function handlePress(){return console.log(\"Text pressed\");};return React.createElement(View,{style:styles.container},React.createElement(View,{style:{backgroundColor:colors.background,flex:1}},React.createElement(View,{style:{backgroundColor:colors.primary,flex:1}},React.createElement(View,{style:{flex:3,width:\"100%\",justifyContent:\"center\",alignItems:\"center\"}},React.createElement(Image,{style:styles.image,source:require(\"../assets/images/coincoinlogo.png\")}))),React.createElement(View,{style:{backgroundColor:colors.background,flex:7,alignItems:\"center\"}},React.createElement(AppPicker,{items:categories,placeholder:\"category\",iconName:\"barschart\",selectedItem:selected,onSelectItem:function onSelectItem(item){return setSelected(item);}}),React.createElement(ItemList,null))));}var styles=StyleSheet.create({container:{flex:1,backgroundColor:\"#fff\"},image:{height:40,width:36}});export default WatchlistScreen;","map":{"version":3,"sources":["C:/Users/jacob/AwesomeProject/app/screens/WatchlistScreen.js"],"names":["React","useState","colors","ItemList","IconButton","AppPicker","WatchlistScreen","props","categories","label","value","selected","setSelected","console","log","handlePress","styles","container","backgroundColor","background","flex","primary","width","justifyContent","alignItems","image","require","item","StyleSheet","create","height"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,ySAGA,MAAOC,CAAAA,MAAP,wBACA,MAAOC,CAAAA,QAAP,8BACA,MAAOC,CAAAA,UAAP,gCACA,MAAOC,CAAAA,SAAP,+BAEA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAE9B,GAAMC,CAAAA,UAAU,CAAG,CACjB,CAAEC,KAAK,CAAE,wBAAT,CAAmCC,KAAK,CAAE,CAA1C,CADiB,CAEjB,CAAED,KAAK,CAAE,4BAAT,CAAuCC,KAAK,CAAE,CAA9C,CAFiB,CAGjB,CAAED,KAAK,CAAE,6BAAT,CAAwCC,KAAK,CAAE,CAA/C,CAHiB,CAIjB,CAAED,KAAK,CAAE,iCAAT,CAA4CC,KAAK,CAAE,CAAnD,CAJiB,CAAnB,CAF8B,cASET,QAAQ,CAACO,UAAU,CAAC,CAAD,CAAX,CATV,wCASvBG,QATuB,eASbC,WATa,eAW9BC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMF,CAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN,EAApB,CAEA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEE,MAAM,CAACC,SAApB,EACE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLC,eAAe,CAAEhB,MAAM,CAACiB,UADnB,CAELC,IAAI,CAAE,CAFD,CADT,EAME,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEF,eAAe,CAAEhB,MAAM,CAACmB,OAA1B,CAAmCD,IAAI,CAAE,CAAzC,CAAb,EACE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLA,IAAI,CAAE,CADD,CAELE,KAAK,CAAE,MAFF,CAGLC,cAAc,CAAE,QAHX,CAILC,UAAU,CAAE,QAJP,CADT,EAQE,oBAAC,KAAD,EACE,KAAK,CAAER,MAAM,CAACS,KADhB,CAEE,MAAM,CAAEC,OAAO,qCAFjB,EARF,CADF,CANF,CAsBE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLR,eAAe,CAAEhB,MAAM,CAACiB,UADnB,CAELC,IAAI,CAAE,CAFD,CAGLI,UAAU,CAAE,QAHP,CADT,EAOE,oBAAC,SAAD,EACE,KAAK,CAAEhB,UADT,CAEE,WAAW,CAAC,UAFd,CAGE,QAAQ,CAAE,WAHZ,CAIE,YAAY,CAAEG,QAJhB,CAKE,YAAY,CAAE,sBAACgB,IAAD,QAAUf,CAAAA,WAAW,CAACe,IAAD,CAArB,EALhB,EAPF,CAeE,oBAAC,QAAD,MAfF,CAtBF,CADF,CADF,CA4CD,CAED,GAAMX,CAAAA,MAAM,CAAGY,UAAU,CAACC,MAAX,CAAkB,CAC/BZ,SAAS,CAAE,CACTG,IAAI,CAAE,CADG,CAETF,eAAe,CAAE,MAFR,CADoB,CAM/BO,KAAK,CAAE,CACLK,MAAM,CAAE,EADH,CAELR,KAAK,CAAE,EAFF,CANwB,CAAlB,CAAf,CAYA,cAAehB,CAAAA,eAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Image, Platform, StatusBar } from \"react-native\";\r\n\r\nimport colors from \"../config/colors\";\r\nimport ItemList from \"../components/ItemList\";\r\nimport IconButton from \"../components/IconButton\";\r\nimport AppPicker from \"../components/AppPicker\";\r\n\r\nfunction WatchlistScreen(props) {\r\n  /* Creating categories for picker */\r\n  const categories = [\r\n    { label: \"Sort by price (Rising)\", value: 1 },\r\n    { label: \"Sort by price (Descending)\", value: 2 },\r\n    { label: \"Sort by market cap (Rising)\", value: 3 },\r\n    { label: \"Sort by market cap (Descending)\", value: 4 },\r\n  ];\r\n\r\n  const [selected, setSelected] = useState(categories[0]);\r\n\r\n  console.log(\"App executed\");\r\n  const handlePress = () => console.log(\"Text pressed\");\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View\r\n        style={{\r\n          backgroundColor: colors.background,\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <View style={{ backgroundColor: colors.primary, flex: 1 }}>\r\n          <View\r\n            style={{\r\n              flex: 3,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              style={styles.image}\r\n              source={require(\"../assets/images/coincoinlogo.png\")}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            backgroundColor: colors.background,\r\n            flex: 7,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <AppPicker\r\n            items={categories}\r\n            placeholder=\"category\"\r\n            iconName={\"barschart\"}\r\n            selectedItem={selected}\r\n            onSelectItem={(item) => setSelected(item)}\r\n          />\r\n\r\n          <ItemList />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n\r\n  image: {\r\n    height: 40,\r\n    width: 36,\r\n  },\r\n});\r\n\r\nexport default WatchlistScreen;\r\n"]},"metadata":{},"sourceType":"module"}